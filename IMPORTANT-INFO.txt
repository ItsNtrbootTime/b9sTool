IMPORTANT INFO

b9sTool 4.0.X differs from 2.X.X in some important ways.

1) When b9sTool boots the first time, it will initialize BACKUP.BIN on the sd card. First, it executes the known-plaintext attack and writes the b9s payload to boot9strap/BACKUP.BIN.
Then, it copies a clean firm backup to the same file. If you have clean firm installed, "install boot9strap" will be offered. If you have b9s installed, "restore stock firmware" will be offered.
There is no F0F1 file in this version. Firm0 is backed up though, don't worry.
Every session forward loads the same data from BACKUP.BIN (i.e. the b9s payload is not recalculated each time). For obvious reasons, this file should be left alone!

BACKUP.BIN structure:
0 - 0x100000 		Encrypted clean firmware backup
0x100000 - 0x7800	Encrypted b9s payload firm
0x10FE00 -0x110000	Plaintext Header with hashes for previous 2 regions

The plaintext header above is also written to the last sector of the NAND firm1 region for verifying the BACKUP.BIN.
(this is to protect BACKUP.BINs from getting mixed up with the wrong systems, and being used across firmware versions - bad)

2) Firmware info
4.0.1 is for firmware 11.8 ONLY
4.0.0 is for firmwares 11.4 to 11.7 ONLY
DONT update firmware inbetween b9sTool uses. BACKUP.BINs will not be compatible across firmwares. You will get verify errors.
I would recommend that anyone 11.4 - 11.7 just wait until smea's arm9 hax reveal aug 11th 2018. This is only a few days away at the time of this writing.

3) What if something goes wrong with b9sTool 4.0.X?

A. If you get an a9lh error. 
- First, make sure you really don't have a9lh. If you use b9sTool with a9lh, you will brick.
If you're sure this is a false positive: rename boot9strap/key.bin (this is your console unique NAND header) to danger_skip_a9lh (no file extension)
Then rerun b9sTool and the error should be skipped and you get to the menu.

B. The first time you run b9sTool, you get BACKUP.BIN verify errors of some sort.
- Make sure BACKUP.BIN is in the boot9strap folder. Don't move it around or rename it. Moving/renaming it will not cause the file to regenerate. Just don't ever touch it.
- Rename boot9strap/key.bin to danger_reset_backup (no file extension)
Then rerun b9sTool and hopefully the menu shows up.

C. You select "Install boot9strap", reset the system, but the system just boots up normal.
- Boot b9sTool and make sure the FIRM STATUS says "STOCK". If it says FIRM STATUS: B9S, then select "Restore stock firmware".
Then rename boot9strap/key.bin to danger_reset_backup (no file extension)
Run b9sTool again, choose "Install boot9strap", and hopefully you will see luma3ds config on next reboot.
- If the above fails and you have an old 3ds/2ds (i.e. NOT New 3ds/2ds), you may try to fix your firms with the 3ds's built-in recovery mode.
Do this: https://www.3dbrew.org/wiki/Recovery_Mode
Then actually select update. The system should say "up to date" and then turn off.
Rename boot9strap/key.bin to danger_reset_backup (no file extension)
Run b9sTool again, choose "Install boot9strap", and hopefully you will see luma3ds config on next reboot.







